[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "Welcome to the official course site for PSTAT 5A (titled Understanding Data) at the University of California, Santa Barbara! Please note that this is the site for Summer Session A, 2023 iteration of the course, with Ethan Marzban.\n\nAll relevant information for the course can be found on this site, with the (perhaps crucial) exception of quizzes, which will take place on the course Gradescope site.\n\nIf you are looking for a past iteration of this course, please navigate to https://pstat5a-archives.github.io"
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html",
    "href": "Pages/Labs/Lab01/lab01.html",
    "title": "Lab01",
    "section": "",
    "text": "Welcome to the first PSTAT 5A Computing Lab! As we will soon learn, computers play an integral part in effectively and efficiently performing statistical analyses. The primary goal of these Computing Labs is to develop the skills to be able to communicate with computers, and also learn the basic principles and language of programming."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#structure-of-labs",
    "href": "Pages/Labs/Lab01/lab01.html#structure-of-labs",
    "title": "Lab01",
    "section": "Structure of Labs",
    "text": "Structure of Labs\nEvery week we (the course staff) will publish a lab document, which is intended to be completed during your Lab Section (i.e. your first Section) of the week. Each lab document will consist of a combination of text, tips, and the occasional task for you to complete based on the text provided. Your TA will cover exactly what you need to turn in at the end of each lab in order to receive credit, but you should read all lab material carefully and thoroughly as content from labs will appear on quizzes and exams."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#what-is-programming",
    "href": "Pages/Labs/Lab01/lab01.html#what-is-programming",
    "title": "Lab01",
    "section": "What Is Programming?",
    "text": "What Is Programming?\nComputers, though incredibly useful, are fairly complex machines. To communicate with them, we need to use a specific language, known as a Programming Language. There are a number of programming languages currently in use, with names such as R, Julia, MatLab, and - the language we will use for this course - Python.\n\nPython programs can be written in a number of different environments, such as a text editor (e.g. Notepad, VS Code, etc.) or a Terminal window. For this class, we will use Jupyter Notebook (where Jupyter is pronounced like the planet), an interactive environment that has the added benefit of being hosted online meaning you do not have to download anything onto your personal machines in order to run Python code!"
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#getting-started",
    "href": "Pages/Labs/Lab01/lab01.html#getting-started",
    "title": "Lab01",
    "section": "Getting Started",
    "text": "Getting Started\n\nNavigate to https://pstat5a.lsit.ucsb.edu\nClick the “Sign in with your UCSB NetID” button, and sign in.\nUnder “Notebook”, click “Python 3 (ipykernel)” (see below).\n\n\nCongratulations- you have just made your first Jupyter notebook! Now, it’s time for our first task:\n\n\n\n\n\n\nTask 1\n\n\n\nChange the name of your notebook to “Lab01” using the following steps:\n\nIn the lefthand menu bar, find the notebook you just created (by default this will be something like “Untitled” or “Untitled1”), and right-click and click “Rename” (see picture below)\n\n\n\nRename your file to “Lab01”, and then hit the return (enter) key on your keyboard. You should see the filename in the menubar update:\n\n\n\n\n\nJupyterHub Environment\nLet’s take a minute to familiarize ourselves with the JupyterHub environment. Every Jupyter notebook is comprised of what are known as cells; these are the shaded grey rectangles that appear in a Jupyter notebook.\n\nIf your cell has a grey background (like in the image above), it is inactive. To activate a cell, place your cursor inside it, and click:\n\nmeans it is selected and active, and ready to be populated with text and/or code.\n\n\n\n\n\n\nImportant\n\n\n\nWhen you run code using the “Run” button at the top of your environment, only the active cell will be executed.\n\n\n\n\nCells\nThere are two main types of cells we will be using in this class: Markdown cells (which include text/descriptions, but no code) and code cells (which contain code that needs to be run). We’ll be talking a bit more about Markdown cells in a few weeks.\n\n\n\n\n\n\nTask 2\n\n\n\n\nIf you haven’t already, click into the code cell that was automatically created when you created your document to activate it.\nClick on the dropdown menu that currently says “code” (near the center of the top of your interface), and select “Markdown”\n\n\n\nClick back into the cell, copy-paste the text [including the hashtag!] # Task 2, and then run the cell by clicking on the button that looks like a “play” symbol at the top of your window:\n\n\n\nNote that after running your cell from step 3 above, Jupyter automatically created a new code cell. Click into this code cell and run the code 2 + 2.\n\nWhen you are done, your notebook should look something like this:\n\n\n\nNotice that after running a cell, Jupyter automatically adds a new cell right after it!\n\n\n\n\n\n\nTip\n\n\n\nTo run a cell and automatically create a new cell underneath it, use the keyboard shortcut SHIFT + ENTER.\n\n\nBy the way, do you notice the little In [1]: at the left of our first cell? This is Jupyter’s way of letting us know the order in which the code cells have been executed. The 1 in our cell from Task 2 above corresponds to the fact that this was the 1st code cell we executed in our document."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#coding-with-python",
    "href": "Pages/Labs/Lab01/lab01.html#coding-with-python",
    "title": "Lab01",
    "section": "Coding with Python",
    "text": "Coding with Python\nThere is a reason we use the word “language” to describe programming languages- that is because they function quite like a human language. This means that they each have their own syntax (i.e. set of grammar rules). It is precisely the syntax of the Python language that we will be learning over the course of these Computing Labs!\n\nPrograms are made up of expressions, like 2 + 2. We evaluate expressions by running (or executing) them in a programming language. Expressions are like the sentences of programming- they contain complex pieces of information that are conveyed between the user and the computer.\n\nMuch like sentences in other languages, expressions must obey a rigid syntax. For example, when we want to perform addition in Python we must use the + symbol; we can’t, for example, say 2 plus 2.\n\nWhat happens when we violate a syntax rule? Well…\n\n\n\n\n\n\nTask 3\n\n\n\n\nCreate a mardown cell and write # Task 3\nCreate a code cell, and run 2 plus 2. (You should get an error!)\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nFor this class, we expect you to precede each code cell from a particular task with a markdown cell that says # Task X (where X is the number of the task).\n\nWe will stop explicitly writing this step in the tasks below, but you are still expected to include a labeling cell!\n\n\nWell, what is this error saying? Let’s examine it more closely.\n\n  File \"<ipython-input-2-5196071441ec>\", line 1\n    2 plus 2\n      ^\nSyntaxError: invalid syntax\n\nIndeed, Python is telling us exactly what went wrong- the SyntaxError part of the error message tells us that we violated one of the syntax rules of Python, and the ^ pointing to the p in plus is telling us that the exact syntax error occurred when we tried to use the word plus.\n\n\n\n\n\n\nTip\n\n\n\nAlways read error messages!\n\n\nThe messages that Python displays when we get an error are Python’s way of trying to communicate with us what is going wrong!"
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#python-as-a-calculator",
    "href": "Pages/Labs/Lab01/lab01.html#python-as-a-calculator",
    "title": "Lab01",
    "section": "Python as a Calculator",
    "text": "Python as a Calculator\nAlright, let’s get our hands dirty with some real programming! One of the many uses of Python is to help us compute arithmetic quantities very quickly. As a rule-of-thumb, Python adheres to the order of operations:\n\nParentheses\nExponents\nMultiplication\nDivision\nAddition\nSubtraction\n\nHere is a list of mathematical operators and their corresponding Python syntax:\n\n\n\nOperation\nPython Operator\nExample\nResult\n\n\n\n\nAddition\n+\n2 + 2\n4\n\n\nSubtraction\n-\n2 - 2\n0\n\n\nMultiplication\n*\n2 * 2\n4\n\n\nDivision\n/\n2 / 2\n1\n\n\nExponentiation\n**\n2 ** 2\n4\n\n\n\n\n\n\n\n\n\nTask 4\n\n\n\nCompute the following:\n\n\\(\\displaystyle \\frac{2 + 3}{4 + 5^6}\\)\n\\(\\displaystyle (1 - 3 \\cdot 4^5)^{6}\\)\n\n\n\nNaturally, Python is capable of much more than just basic arithmetic!\n\n\n\n\n\n\nTask 5\n\n\n\nCreate a code chunk and run sin(1) to compute the sine of 1.\n\n\nUh-oh- looks like we’ve encountered another error! Indeed, even the most experience coder will often run up against errors like this, and need to subsequently enter the stage of debugging their code.\n\nWe’re now getting a new error: this time, it’s a NameError. As the name suggests, this is Python’s way of telling us that it doesn’t recognize the name of something we’ve written. In fact, it’s explicitly saying:\n\nNameError: name 'sin' is not defined,\n\nSpecifically, Python is telling us that it (somehow) doesn’t know what sin means. Why? Well, to answer that, we need to take a bit of a detour into the world of modules."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#python-modules",
    "href": "Pages/Labs/Lab01/lab01.html#python-modules",
    "title": "Lab01",
    "section": "Python Modules",
    "text": "Python Modules\nIt is important to note that all Python objects take up space in the form of memory (i.e. storage space on your computer). Nowadays, with recent innovations in computers and computer memory, this is not so much of an issue but historically, when many of these programming languages were first being created, optimizing space was of the utmost concern. (Even today, efficiency is a guiding tenet of most programmers!)\n\nThink of it this way- if you are doing work on code that doesn’t involve much trigonometry, there isn’t a whole lot of need to have the sin function readily available. The idea programmers had was to compartmentalize, and store certain functions in what are known as modules.\n\nModules are Python files containing definitions for functions and classes (we’ll talk about data classes a little later). While data types and built-in functions in the Python standard library are available for immediate use, modules need to be imported first.\n\nThe syntax for importing all functions from a module is:\n\nfrom <module name> import *\n\nSometimes, we may not want to import the entirety of a module and instead import only a couple of functions from that module. In that case, we would use the syntax:\n\nfrom <module name> import <function name>\n\nWe’ll talk a bit more about modules in a future lab. For now, let’s return to our task of computing \\(\\sin(1)\\).\n\n\n\n\n\n\nTask 5 (cont’d)\n\n\n\nIt turns out that the sin() function is located in the math module Load all functions from the math module, and then try re-running sin(1)."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#functions",
    "href": "Pages/Labs/Lab01/lab01.html#functions",
    "title": "Lab01",
    "section": "Functions",
    "text": "Functions\nWe will talk extensively about Python functions in a few weeks. For now, suffice it to say that Python functions work just like mathematical functions: for example, note how we used the sin() function in the previous task. One piece of terminology that is somewhat specific to programming is the notion of calling- when we say we call a function on an argument, we mean that we’re passing that argument through the function. So, for example, in Task 5 we called the sin() function on the argument 1."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#variable-assignment",
    "href": "Pages/Labs/Lab01/lab01.html#variable-assignment",
    "title": "Lab01",
    "section": "Variable Assignment",
    "text": "Variable Assignment\nLet’s talk a bit about variables. Just like in math, variables in a programming language refer to a placeholder name for a particular piece of information (be it a function, value, etc.) The act of storing information in a variable is called assignment, and in Python variable assignment is performed using the = symbol.\n\n<variable name> = <what you want to associate with the variable>\n\nFor example, after running\n\nx = 2\n\nthe quantity x will always be synonymous with the quantity 2, and running x + 2 will return a value of 4 (as 2 + 2 = 4).\n\nPython affords a lot of flexibility when it comes to variable names- that is, we can pick almost anything we want to be a variable name! There are, however, some exceptions:\n\nVariable names cannot start with a number\nVariable names cannot include a space\n\n\n\n\n\n\n\nTip\n\n\n\nIt is a good programming practice to give your variables names that are descriptive, but not overly long.\n\n\nIf we want to view the value stored in a variable, we have two options: we could simply type the name of the variable, and run the cell:\n\nx\n\n2\n\n\nor we could pass the variable name into a call to the print() function:\n\nprint(x)\n\n2\n\n\n\n\n\n\n\n\nTask 6\n\n\n\n(a) Define a variable called my_variable, and assign it the value 5.\n(b) Now, run the command print(My_variable) (note the capitalization!)\n\n\n\n\n\n\n\n\nTip\n\n\n\nPython is case-sensitive.\n\n\nSometimes it will be necessary to update or re-assign a new value to an existing variable. For example, let’s examine the structure of the following code:\n\nx = 2\nx = x + 3\n\nWhat do you think running x will return? If you said 5, you’d be correct! The key point of this is:\n\n\n\n\n\n\nImportant\n\n\n\nIn variable assignment, Python starts by executing the righthand side of the equality before executing the lefthand side.\n\n\nSo, in code example above, Python first executed x + 3 (which is equivalent to 2 + 3; i.e. 5), and then re-assigned x the value 5."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#comments",
    "href": "Pages/Labs/Lab01/lab01.html#comments",
    "title": "Lab01",
    "section": "Comments",
    "text": "Comments\nWhen writing large pieces of code, programmers will often utilize comments to annotate their work and help readers understand what their code is doing. In Python there are two types of comments: inline comments and multiline comments. Inline comments are created using the hashtag (#) and multiline comments must be enclosed in three quotation marks (\"\"\"). As an example of both, consider the following snippet of code:\n\nx = 1             # define x\ny = 2             # define y\nz = (x + y) ** 2  # define z\ny = z / 3         # redefine y\n\n\"\"\"This code is defines 3 variables,\ncalled 'x', 'y', and 'z'.\"\"\"\n\n\n\n\n\n\n\nTask 7\n\n\n\nGo back and add some descriptive comments to some of your previous code cells. (You don’t need a separate markdown cell indicating you have done so.)"
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#data-types",
    "href": "Pages/Labs/Lab01/lab01.html#data-types",
    "title": "Lab01",
    "section": "Data Types",
    "text": "Data Types\nBefore closing out this lab, we should talk a bit about the quantities we assign to variables- i.e. the different data types in Python.\n\nThe term data type loosely refers to the actual type of a particular quantity (e.g. numerical, character, etc.) The main data types we will discuss in this lab are:\n\nfloat: refers to numerical (real-valued) quantities\nint: short for integer; refers to numerical quantities that are integers\nstr: short for string; refers to character- or text-type data (and will always be enclosed in either single quotation marks or double quotation marks)\n\n\n\n\n\n\n\nTask 8\n\n\n\nRun each of the following:\n\ntype(1)\ntype(1.1)\ntype(\"hello\")\n\n\n\nLet’s combine our knowledge of variable assignment with our newfound knowledge of data types!\n\n\n\n\n\n\nTask 9\n\n\n\n(a) Perform the following variable assignments:\n\ncourse = \"PSTAT 5A\"\nnum_sections = 4\nsection_capacity = 25\n\n(c) A new section has been added! Update the variable num_sections to be one more than when you initially defined it above. (Don’t just use num_sections = 5- think about our discussion on updating variables above!)\n(b) Using comments, write down what you think the output of each of the following expressions will be:\n\ntype(course)\ntype(num_sections)\nnum_sections * section_capacity\n\nThen, run each expression in a separate code chunk and comment on the results.\n(c) Create a new variable called course_capacity and assign it the value of the maximum capacity of the course. (Hint: there are only 5 sections, and each section has a maximum capacity of 25. Try to use your already-defined variables as much as possible!)\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe type() function can be used to identify the data type of a particular quantity."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#final-formatting",
    "href": "Pages/Labs/Lab01/lab01.html#final-formatting",
    "title": "Lab01",
    "section": "Final Formatting",
    "text": "Final Formatting\nIt’s time to start adding the finishing touches to our first lab!\n\n\n\n\n\n\nTask 10\n\n\n\n\nClick on the gear-shaped icon in the top-right of your console:\n\n\n\nScroll down until you see the Notebook Metadata:\n\n\n\nRight after the second-to-last brace (}), add a comma , and then the following code:\n\n\n\"authors\": [\n        {\n            \"name\": \"<YOUR NAME>\"\n        },\n        {\n            \"name\": \"<YOUR NETID>\"\n        }\n    ]\n\nwhere you replace <YOUR NAME> and <YOUR NETID> with your name and NetID, respectively. For example, after performing the above steps, my Notebook Metadata would look like:\n\nIMPORTANT: If your NetID contains an underscore, e.g. my_netid, then you need to replace the underscore with the text \\\\textunderscore (with the two backslashes at the beginning) followed by a space. Otherwise, your Lab will not convert to a PDF properly. So, for example, if your NetID is my_netid then you should write your NetID as my\\\\textunderscore netid. Your TA will go over how to update your Notebook Metadata in the last few minutes of Lab."
  },
  {
    "objectID": "Pages/Labs/Lab01/lab01.html#what-to-turn-in",
    "href": "Pages/Labs/Lab01/lab01.html#what-to-turn-in",
    "title": "Lab01",
    "section": "What to Turn In",
    "text": "What to Turn In\nCongrats on finishing the first PSTAT 5A Computing Lab! Here’s what you need to submit:\n\nYour downloaded .ipynb file\nYour downloaded .PDF file\n\n(Please consult the video on Canvas showing you how to upload your work to Gradescope). Toward the end of Lab, your TA will show you how to download the above files. You will have until 40 minutes after the end of your Section (e.g. if your Section ends at 1:20pm, then you have until 2:00pm to submit) to turn in your work in order to get credit for the lab. Also, please remember that you need to upload both a .ipynb file and a .pdf. We will be grading labs based on effort, so just turn in what you are able to!"
  },
  {
    "objectID": "Pages/course_staff.html",
    "href": "Pages/course_staff.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "Instructor: Ethan P. Marzban\n\n\n\n\n\n\n\n\n\n\n\n\n\nEthan P. Marzban\n\n\nHello! I currently just finished the 3rd year of my PhD program here in the PSTAT department, having joined back in 2020 (after having completed my undergraduate degree in Statistics as well). Outside of school I enjoy playing the piano, drinking boba, and talking about cats!\n\n\n\n\n\nEmail:\n\n\nepmarzban@pstat.ucsb.edu (Please use only in case of emergency)\n\n\n\n\nOH:\n\n\nTuesdays 4:30 - 5:30pm, over Zoom  Thursdays 2:30 - 3:30pm, in SH 5607F (the Sobel Seminar Hall)"
  },
  {
    "objectID": "Pages/course_staff.html#teaching-assistants-tas",
    "href": "Pages/course_staff.html#teaching-assistants-tas",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Teaching Assistants (TAs)",
    "text": "Teaching Assistants (TAs)\n\n\n\n\n\n\n\nTA: Mengrui Zhang\n\n\n\n\n\n\n\n\n\n\n\n\n\nMengrui Zhang\n\n\nMengrui is a PhD Student in the PSTAT Department.\n\n\n\n\n\nEmail:\n\n\nmengrui@ucsb.edu\n\n\n\n\nOH:\n\n\nMW, 4 - 6pm (SH 5431 W)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTA: Olivier Mulkin\n\n\n\n\n\n\n\n\n\n\n\n\n\nOlivier Mulkin\n\n\nOlivier is a PhD Student in the PSTAT Department.\n\n\n\n\n\nEmail:\n\n\nomulkin@ucsb.edu\n\n\n\n\nOH:\n\n\nT, 1 - 3pm (Zoom) Starts in Week 2"
  },
  {
    "objectID": "Pages/exam_prep.html",
    "href": "Pages/exam_prep.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "Preparatory material for the exams will be posted here as we approach the dates of the exams."
  },
  {
    "objectID": "Pages/syllabus.html",
    "href": "Pages/syllabus.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "WELCOME TO PSTAT 5A! I am very excited to introduce to you the wonderful fields of Statistics and Data Science. As our world becomes ever more saturated with data, the need for data literacy becomes increasingly important. By the end of this course, I hope you will be able to think critically about statistical studies and results, understand how data can be used to simultaneously inform and manipulate, and begin applying your newfound techniques to your future endeavors. I am very much looking forward to a great quarter with all of you!\n— Ethan"
  },
  {
    "objectID": "Pages/syllabus.html#lecture-information",
    "href": "Pages/syllabus.html#lecture-information",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Lecture Information",
    "text": "Lecture Information\n\n\n\n\n\n\nLecture Times and Locations\n\n\n\nM, T, W, Th: 11:00am - 12:20pm in ILP 1101"
  },
  {
    "objectID": "Pages/syllabus.html#course-staff",
    "href": "Pages/syllabus.html#course-staff",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Course Staff",
    "text": "Course Staff\n\n\n\n\n\n\n\n\n\n\nInstructor:\nEthan P. Marzban\n\n\n\n\nEmail:\nepmarzban@pstat.ucsb.edu (Please use only in case of emergency)\n\n\nHelp Hours:\n\nTuesdays: 4:30pm - 5:30pm (Zoom)\nThursdays: 1:00pm - 2:00pm (SH 5607 F)\n\n\n\n\n\n\n\n\n\n\n\n\nTAs\n\n\n\n\nMengrui Zhang\n(mengrui@ucsb.edu)\n\n\nOlivier Mulkin\n(omulkin@ucsb.edu)"
  },
  {
    "objectID": "Pages/syllabus.html#schedule-of-sections",
    "href": "Pages/syllabus.html#schedule-of-sections",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Schedule of Sections",
    "text": "Schedule of Sections\n\n\n\nTimes\nTA\nLocation\n\n\n\n\nMW 12:30 - 1:20pm\nOlivier Mulkin\nPHELPS 1513\n\n\nMW 2:00 - 2:50pm\nMengrui Zhang\nPHELPS 1513\n\n\nMW 3:00 - 3:50pm\nMengrui Zhang\nPHELPS 1513"
  },
  {
    "objectID": "Pages/syllabus.html#course-description",
    "href": "Pages/syllabus.html#course-description",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Course Description",
    "text": "Course Description\nThe official description of this course, from the Course Catalog, is:\n\nIntroduction to data science. Concepts of statistical thinking. Topics include random variables, sampling distributions, hypothesis testing, correlation and regression. Visualizing, analyzing and interpreting real world data using Python. Computing labs required."
  },
  {
    "objectID": "Pages/syllabus.html#textbooks",
    "href": "Pages/syllabus.html#textbooks",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Textbook(s)",
    "text": "Textbook(s)\nThis quarter, we do not have a required textbook- the lecture slides and lab activities are designed to be self-sufficient. However, the following textbooks are highly recommended:\n\nOpenIntro: Statistics. David Diez, Mine Çetinkaya-Rundel, and Christopher D Barr. (free version, courtesy of the authors, available at https://leanpub.com/os)\nComputational and Inferential Thinking: The Foundations of Data Science. Ani Adhikari and John DeNero. (available at: https://www.inferentialthinking.com)\nStatClass (2nd Edition, Revised). Dawn E. Holmes and Lubella A. Lenaburg"
  },
  {
    "objectID": "Pages/syllabus.html#course-components",
    "href": "Pages/syllabus.html#course-components",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Course Components",
    "text": "Course Components\nThe following are the assignments and metrics that will be used to compute your final grade in this course:\n\nLabs\nEvery Monday you will work through a Lab worksheet that will be posted to the website by the previous day. You will then have until 40 minutes after the end of your scheduled section to submit your work through Gradescope. Your TA will explain more about the structure of lab during your first Section meeting of the quarter.\n\n\nQuizzes\nQuizzes will be administered asynchronously on Fridays, through Gradescope. Specifically, the quiz will remain open from 10am until 11:59pm, and you must find 40 consecutive minutes to take the quiz. (Consecutive means you cannot start the quiz, and then come back to it later- once you start, you will have 40 minutes to both complete the quiz as well as upload your work). I encourage you to spend 25 minutes working on the quiz, and 15 minutes uploading. No quiz scores will be dropped. There are no quizzes in Exam Weeks.\n\n\nExams\nThere are two midterms and a final exam for this class. You are required to take all three exams; failure to do so will result in an automatic grade of “F”, so please ensure you are able to take the exams on the dates listed below.\n\n\n\n\n\n\nExam Dates:\n\n\n\n\nMidterm 1 is scheduled to take place Thursday July 6 from 11:00am - 12:20pm (lecture time)\nMidterm 2 is scheduled to take place Thursday July 20 from 11:00am - 12:20pm (lecture time)\nThe final is scheduled to take place FRIDAY, AUGUST 4 from 4 - 7pm\n\n\n\nAll exams are scheduled to take place in our lecture classroom, ILP 1101. Unless stated otherwise, all exams will be cumulative.\n\n\nHomework:\nHomework for this class will be neither collected nor graded. However, the weekly quizzes will be based heavily (though potentially not entirely) off the homework assignments. Homework assignments will be released on Mondays, along with their final answers. Solutions will be posted biweekly, on the Tuesdays before exams. As such, you should not rely on the solutions to help you study; instead, please come to office hours to check your work regularly!\n\n\nSchedule of Due Dates\nA tentative schedule of release and due dates can be found here"
  },
  {
    "objectID": "Pages/syllabus.html#grading-scheme",
    "href": "Pages/syllabus.html#grading-scheme",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Grading Scheme",
    "text": "Grading Scheme\nYour final grade will be computed using the following weights:\n\n\n\nLabs:\n10%\n\n\nQuizzes:\n15%\n\n\nMidterm 1\n20%\n\n\nMidterm 2\n20%\n\n\nFinal Examination:\n35%\n\n\n\nPlease note that late submissions for any of the above will not be accepted. Additionally, make-up exams cannot be accommodated.\nYour final letter grade will be issued according to the following scheme (cutoffs between plusses and minuses will be calculated at the end of the quarter):\n\nA– – A+: 90 – 100%\nB– – B+: 80 – 89.99%\nC– – C+: 70 – 79.99%\nD– – D+ : 60 – 69.99%\nF: 0 – 59.99%\n\nI have elected to adopt an uncurved grading scheme to eliminate any sense of “competition” among students; I highly encourage you all to collaborate with and uplift each other. Having said that, I will certainly consider adjusting the cutoffs (naturally, in everyone’s favor) at the end of the quarter if necessary."
  },
  {
    "objectID": "Pages/syllabus.html#academic-integrity",
    "href": "Pages/syllabus.html#academic-integrity",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Academic Integrity",
    "text": "Academic Integrity\nAs a member of the UCSB community, it is expected that you will act with academic integrity. This means, among other things, that the work you submit should be entirely your own and not copied from any external sources. Collaboration on non-quiz and non-exam assignments is perfectly acceptable (and even encouraged), but the work you submit should still be your own; you can’t have someone else write up solutions for you.\nAnyone found guilty of academic misconduct will be reported to the Academic Senate, and will receive at minimum a failing grade on the assignment in question; further actions may also include failing the course, and marks being made on permanent records. Depending on the severity of the infraction, expulsion is also a possibility.\nBasically, don’t cheat- please! If you’re ever struggling with course material, please come talk to me or the TA’s. We are truly here for you, and want only the best for you."
  },
  {
    "objectID": "Pages/syllabus.html#intellectual-property",
    "href": "Pages/syllabus.html#intellectual-property",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Intellectual Property",
    "text": "Intellectual Property\nYou’ve probably seen a clause on other syllabi stating something to the effect of “all material in this course is the intellectual property of myself and may not be shared with anyone outside this class without my explicit written permission.”\nThough this does still hold true for this course, I will be making most course-related material available on a public GitHub site, which can be accessed here: https://pstat5a.github.io."
  },
  {
    "objectID": "Pages/syllabus.html#disabled-students-program-dsp",
    "href": "Pages/syllabus.html#disabled-students-program-dsp",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Disabled Students Program (DSP)",
    "text": "Disabled Students Program (DSP)\nIf you have a disability, or otherwise require accommodations for the exams and/or quizzes please reach out to the Disabled Students Program (DSP) ASAP to ensure your request(s) for accommodation can be processed. We ask that all requests be logged at least a week in advance, to ensure the system enough time to process. Please note that we cannot grant any requests for accommodations unless they come to us from DSP directly."
  },
  {
    "objectID": "Pages/syllabus.html#technology-needs",
    "href": "Pages/syllabus.html#technology-needs",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Technology Needs",
    "text": "Technology Needs\nAs a part of this course, you will be required to program in Python. Though the Lab Sections take place in specially designed classrooms that come equipped with computers, your homework and quizzes may cover Python-related questions, which means we expect you to have access to a laptop capable of connecting to the internet. If you do not currently possess such a laptop, please check out UCSB’s Basic Needs Resource page on Technology Resources to try and acquire one."
  },
  {
    "objectID": "Pages/syllabus.html#section-switching",
    "href": "Pages/syllabus.html#section-switching",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Section Switching",
    "text": "Section Switching\nAs mentioned above, Sections (both Discussion and Lab) take place in special “Collaborate Classrooms” which are equipped with laptops. There are a fixed number of seats and laptops in these classrooms, meaning we cannot under any circumstance over-enroll sections. Therefore, if you want to switch section unofficially (we do not have the ability to switch your official enrollment through GOLD), please follow the steps at this link. Any requests to switch sections that do not adhere to the guidelines posted at that link will be ignored."
  },
  {
    "objectID": "Pages/syllabus.html#email-policy",
    "href": "Pages/syllabus.html#email-policy",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Email Policy",
    "text": "Email Policy\nPlease note that we have a no-email (including Canvas messages) policy, except for emergencies; I leave it to you to decide what’s an ‘emergency’. Please bring all of your questions to me during Office Hours or at the end of lectures. (Also, please note that DMs [Direct Messages] sent to the course staff through Discord will be ignored.) Thank you!"
  },
  {
    "objectID": "Pages/syllabus.html#disclaimer",
    "href": "Pages/syllabus.html#disclaimer",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Disclaimer",
    "text": "Disclaimer\nThe instructor reserves the right to modify this syllabus if he deems such modifications academically advisable. Such modifications, should they occur, will be announced publicly."
  },
  {
    "objectID": "Pages/hw.html",
    "href": "Pages/hw.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "Here you will find all homework assignments and their solutions.\n\nHomework 1: Blank Answers"
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#course-staff",
    "href": "Pages/Lectures/Lecture00/Lec00.html#course-staff",
    "title": "PSTAT 5A: Lecture 00",
    "section": "Course Staff",
    "text": "Course Staff\n\n\n\n\nInstructor:\n\nEthan (He/Him)\nepmarzban@pstat.ucsb.edu\nT 4:30 - 5:30pm (Zoom) and Th 2 - 3pm (SH607F)\n\n\n\n\n\n\n\n\n\nTeaching Assistants:\n\n\n\n\nMengrui Zhang\nmengrui@ucsb.edu\nOH: MW, 4-6pm (SH 5431W)\n\n\n\n\n\nOlivier Mulkin\nomulkin@ucsb.edu\nOH: T, 1 - 3pm (Zoom; starts next week)"
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#course-resources",
    "href": "Pages/Lectures/Lecture00/Lec00.html#course-resources",
    "title": "PSTAT 5A: Lecture 00",
    "section": "Course Resources",
    "text": "Course Resources\n\nCanvas: for grades\nGradescope: for quizzes and labs\nCourse Website: https://pstat5a.github.io\n\nAll relevant course material will be posted to the website!\nOne exception: quizzes, which will be administered through Gradescope\n\nPlease read the syllabus fully and carefully!\n\nThere’s also a small blurb about email policies in the syllabus. Basically, I’m asking that you email me and the TA’s only in case of emergency (and I leave it to you to determine what’s an emergency); instead, I ask that you please use Office Hours (or even the end of lecture) to communicate with us. I do this to help alleviate stress on both ends of email exchanges; thank you for understanding!"
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#discord",
    "href": "Pages/Lectures/Lecture00/Lec00.html#discord",
    "title": "PSTAT 5A: Lecture 00",
    "section": "Discord",
    "text": "Discord\n\n\n\n\n\n\n\n\n\n\nbit.ly/ssa5adisc"
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#bit.lyssa5adisc",
    "href": "Pages/Lectures/Lecture00/Lec00.html#bit.lyssa5adisc",
    "title": "PSTAT 5A: Lecture 00",
    "section": "bit.ly/ssa5adisc",
    "text": "bit.ly/ssa5adisc"
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#what-is-data-science-1",
    "href": "Pages/Lectures/Lecture00/Lec00.html#what-is-data-science-1",
    "title": "PSTAT 5A: Lecture 00",
    "section": "What is Data Science?",
    "text": "What is Data Science?\n\nNot a bad definition!\nThough, there isn’t a single agreed-upon definition of what data science is.\nMost people agree that Data science is cross-disciplinary, drawing experience and expertise from a wide variety of different fields.\n\nPerhaps the two main fields from which Data Science draws are Statistics and Computer Science\n\nLike ChatGPT suggested, computation is an integral part of Data Science.\n\nAs we will soon see, the data that is being analyzed these days is huge; certainly too large to be able to do anything with it on pen and paper."
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#the-path-forward",
    "href": "Pages/Lectures/Lecture00/Lec00.html#the-path-forward",
    "title": "PSTAT 5A: Lecture 00",
    "section": "The Path Forward",
    "text": "The Path Forward\n\nSo, how does this course factor into the discourse surrounding Data Science?\nFrom the course description:\n\n\n\nIntroduction to data science. Concepts of statistical thinking. Topics include random variables, sampling distributions, hypothesis testing, correlation and regression. Visualizing, analyzing and interpreting real world data using Python. Computing labs required.\n\n\n\nIndeed, this course will serve as a sort of “table of contents” of Data Science, touching on many (but still not all) of the wonderful subfields and subtopics that comprise the field."
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#why-should-i-care",
    "href": "Pages/Lectures/Lecture00/Lec00.html#why-should-i-care",
    "title": "PSTAT 5A: Lecture 00",
    "section": "Why Should I Care?",
    "text": "Why Should I Care?\n\nA natural question that arises in a class like this is: “why should I care?”"
  },
  {
    "objectID": "Pages/Lectures/Lecture00/Lec00.html#why-should-i-care-1",
    "href": "Pages/Lectures/Lecture00/Lec00.html#why-should-i-care-1",
    "title": "PSTAT 5A: Lecture 00",
    "section": "Why Should I Care?",
    "text": "Why Should I Care?\n\n\nI suspect not all of you are necessarily pursuing a degree in Statistics or Data Science.\n\n\n\nHowever, wherever there is data, there is the need for a Data Scientist (or, at least, some of the principles from Data Science).\n\nSo, even if you are working in (what you might think is) a field that is far removed from Statsitics, the minute you start dealing with Data is the minute you start needing to know Data Science!\n\nHere’s a perhaps more pragmatic answer: even if you think you want to go straight into industry right after this course, no company wants to hire someone to just mindlessly crunch numbers - though computing experience is absolutely crucial in making yourself a good candidate, employers would much rather have someone who is both skilled at running code but also understands why they are running the code they are running!"
  },
  {
    "objectID": "Pages/schedule.html",
    "href": "Pages/schedule.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "Disclaimer\n\n\n\nThis schedule is tentative, and is subject to change. Please check back regularly for updates!\n\n\nLast Updated: Sunday, June 25, 2023\n\nAs a reminder: Monday sections are Lab Sections and Wednesday sections are Discussion Sections.\n\n\n\n\n\n\n\n\n\n\n\nWeek\nLectures\nDiscussion Worksheet\nLab\n\n\n\n\n1\n(6/26 - 7/02)\n\n00: Introduction\n01: Descriptive Statistics I\n02: Descriptive Statistics II\n03: Intro to Probability\n04: Counting\n\nWorksheet 01\nLab 01  Introduction to Python\n\n\n2\n(7/03 - 7/09)\n\n05: Conditional Probabilities\n06: NO LECTURE (Fourth of July)\n07: Review\n08: Midterm 1\n\nWorksheet 02\nLab02: Data Classes, Comparisons, Conditionals, and Functions\n\n\n3\n(7/10 - 7/16)\n\n09: Discrete Random Variables\n10: Continuous Random Variables\n11: Introduction to Inference\n12: Confidence Intervals for Proportions\n\nWorksheet 04\nLab03: Descriptive Statistics, Sampling Distributions, and Simulations\n\n\n4\n(7/17 - 7/23)\n\n13: Confidence Intervals for Means\n14: Hypothesis Testing for Proportions\n15: Review\n16: Midterm 2\n\nWorksheet 05\nLab04: Percentiles, QQ-Plots, and Loops\n\n\n5\n(7/24 - 7/30)\n\n17: Hypothesis Testing for Means\n18: Two-Sample t-Tests\n19: ANOVA (Analysis of Variance)\n20: Correlation, and an Intro to Statistical Modeling\n\nWorksheet 06\nLab05: Markdown Syntax, and Importing Data\n\n\n6\n(7/31 - 8/06)\n\n21: Regression\n22: Regression Diagnostics\n23: Sampling Techniques and Experimental Design\n24: Review\nFINAL EXAM: Friday, August 4 from 4 - 7pm\n\n\nLab06: Exploratory Data Analysis"
  },
  {
    "objectID": "Pages/calendar.html",
    "href": "Pages/calendar.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "TA\n\n\nEmail\n\n\nSection Time\n\n\nLocation\n\n\n\n\n\n\nOlivier Mulkin\n\n\nomulkin@pstat.ucsb.edu\n\n\n12:30 - 1:20pm\n\n\nPhelps 1513\n\n\n\n\nMengrui Zhang\n\n\nmengrui@ucsb.edu\n\n\n2 - 2:50pm\n\n\nPhelps 1513\n\n\n\n3 - 3:50pm\n\n\nPhelps 1513"
  },
  {
    "objectID": "Pages/calendar.html#visual-weekly-schedule",
    "href": "Pages/calendar.html#visual-weekly-schedule",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Visual Weekly Schedule",
    "text": "Visual Weekly Schedule"
  }
]